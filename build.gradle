buildscript {
  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  apply from: new File("./dependencies.gradle")

  dependencies {
    classpath dep.kotlinGradlePlugin
    classpath dep.spotlessPlugin
    classpath dep.mavenPublishGradlePlugin
  }
}

allprojects {
  group = GROUP
  version = VERSION_NAME
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'kotlin'
  apply plugin: 'org.jetbrains.dokka'
  apply plugin: 'com.diffplug.gradle.spotless'

  buildscript {
    repositories {
      mavenCentral()
      jcenter()
    }

    dependencies {
      classpath dep.kotlinGradlePlugin
      classpath dep.mavenPublishGradlePlugin
    }
  }

  repositories {
    mavenCentral()
    jcenter()
  }

  compileKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }
  compileTestKotlin {
    kotlinOptions {
      jvmTarget = "1.8"
    }
  }
  sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
  }
  spotless {
    kotlin {
      target "**/*.kt"
      ktlint(dep.ktlintVersion).userData(['indent_size': '2', 'continuation_indent_size' : '4'])
    }
  }
  compileKotlin.dependsOn 'spotlessKotlinApply'

  dependencies {
    testImplementation dep.junitApi
    testRuntimeOnly dep.junitEngine
  }

  // We have to set the dokka configuration after evaluation since the com.vanniktech.maven.publish
  // plugin overwrites our dokka configuration on projects where it's applied.
  afterEvaluate { p ->
    p.tasks.dokka {
      reportUndocumented = false
      skipDeprecated = true
      jdkVersion = 8
    }
  }

  test {
    useJUnitPlatform()
    testLogging {
      events "started", "passed", "skipped", "failed"
      exceptionFormat = 'full'
      showExceptions = true
    }
  }
  if (rootProject.file("hooks.gradle").exists()) {
    apply from: rootProject.file("hooks.gradle")
  }
}
