version: 2.1
jobs:
  compile_and_cache_java:
    machine:
      image: circleci/classic:latest
    working_directory: ~/barber
    environment:
      ENVIRONMENT: TESTING
      JVM_OPTS: -Xmx1024M
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx4096m"
      TERM: dumb
    steps:
      - checkout
      - run:
          name: "Download and extract OpenJDK 11"
          command: |
            mkdir -p ~/openjdk-11 && cd ~/openjdk-11 && curl -sSL https://download.oracle.com/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz | tar -xz --strip-components 1
            echo '
              export PATH="$JAVA_HOME/bin:$PATH"
              export JAVA_HOME="$HOME/openjdk-11"
            ' >> $BASH_ENV
      - run:
          name: "Compile"
          command: |
            ./gradlew testClasses --parallel --build-cache
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          # Under normal usage, saves compiled results from master once a day
          key: v1-master-compile-{{ .BuildNum }}
  java:
    machine:
      image: circleci/classic:latest
    parallelism: 1
    working_directory: ~/barber
    environment:
      ENVIRONMENT: TESTING
      JVM_OPTS: -Xmx1024M
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx4096m"
      TERM: dumb
    steps:
      - checkout # check out source code to working directory
      - restore_cache:
          keys:
            # restore compilation and wrapper from previous branch/job build or master
            - v1-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_NODE_INDEX }}
            - v1-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
            - v1-master-compile
      - run:
          name: "Download and extract OpenJDK 11"
          command: |
            mkdir -p ~/openjdk-11 && cd ~/openjdk-11 && curl -sSL https://download.java.net/java/GA/jdk11/9/GPL/openjdk-11.0.2_linux-x64_bin.tar.gz | tar -xz --strip-components 1
            echo '
              export PATH="$JAVA_HOME/bin:$PATH"
              export JAVA_HOME="$HOME/openjdk-11"
            ' >> $BASH_ENV
      - run:
          name: "Dump environment variables"
          command: env
      - run:
          name: "Build and test"
          command: ./gradlew build check -i --scan --parallel --build-cache
      - run:
          name: Collect test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          # Under normal usage, saves compiled results from master once a day
          key: v1-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ .Environment.CIRCLE_NODE_INDEX }}-build-{{ .BuildNum }}
      - store_test_results:
          name: Store test results
          path: ~/test-results
  docs:
    machine:
      image: circleci/classic:latest
    parallelism: 1
    working_directory: ~/barber
    steps:
      - checkout # check out source code to working directory
      - run: |
          mkdir -p /usr/local/bin
          sudo chown -R circleci:circleci /usr/local/bin
      - run: |
          mkdir -p /usr/local/lib/python3.6/site-packages
          sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: pipdeps-{{ .Branch }}
      - run: sudo pip install mkdocs mkdocs-material
      - save_cache:
          key: pipdeps-{{ .Branch }}
          paths:
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"
      - run: |
          ./gradlew \
            :barber:dokka
      - run: |
          cat README.md | grep -v 'project website' > docs/index.md
          cp CHANGELOG.md docs/changelog.md
      - run: mkdocs build

# TODO bring back "Collect gradle reports" and "Store gradle reports" tasks
workflows:
  version: 2
  on_commit:
    jobs:
      - compile_and_cache_java:
          filters:
            branches:
              only: master
      - java
      - docs
  nightly:
    jobs:
      - java
      - docs
    triggers:
      - schedule:
          # midnight mountain time in UTC
          cron: "0 6 * * *"
          filters:
            branches:
              only:
                - master
